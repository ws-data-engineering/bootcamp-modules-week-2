body {
  display: flex;
  flex-direction: column;
  line-height: 1.3;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1%;
  background-color: #13293d;
  color: #fff;
}

h1 {
  font-size: 200%;
}

h2 {
  margin: 2% 0;
  font-size: 250%;
}

nav ul {
  display: flex;
  justify-content: space-between;
  min-width: 300px;
}

nav a {
  color: #b9C6ae;
  font-weight: bold;
  text-decoration: none;
}

nav a:hover {
  color: #fff;
}

main {
  display: flex;
  flex: 1 1 0;
  max-width: 1200px;
  margin: 2% auto;
}

article {
  border-bottom: 1px solid #d8a47f;
}

article p {
  margin: 2% 0;
  font-size: 110%;
}

article ul {
  margin-left: 5%;
  font-size: 110%;
  list-style: circle;
}

form {
  max-width: 400px;
}

form h3 {
  font-size: 150%;
}

form p {
  margin: 3% 0;
}

label {
  display: block;
}

button {
  padding: 1% 2%;
  color: #fff;
  background-color: #13293d;
  border: none;
  outline: none;
  cursor: pointer;
}

/* What does this CSS rule do and what does moz and webkit represent? */

/* 
The appearance property is used to display an element using platform-native styling based on the the users' operating system's theme.
- Apply platform-specific styling to an element without default styling.
- Remove platform-specific styling to an element with default styling.

The background image property sets one or more background images on an element.

The background repeat property sets how background images are repeated. (Along horizontal or vertical axes, no repeating can be set)

The background position property sets the initial position for each background image.

The background size property sets the image size. (Natural size, stretched, or constrained the fir the space.)

The webkit prefix properties are CSS properties that work with WebKit or Blink-based browsers such as Safari and Chrome.
*/
select {
  /* -moz-appearance: none;
  -webkit-appearance: none; */
  appearance: none;
  background-image: url("../images/arrow.png");
  background-repeat: no-repeat;
  background-position: right;
  background-size: contain;
}

.text-input {
  width: 100%;
  max-width: 100%;
}

.text-input, select {
  padding: 1%;
  outline: none;
  border: 1.2px solid #b9C6ae;
}

.text-input:hover, .checkbox:hover, 
select:hover, button:hover {
  box-shadow: 0 0 5px #999;
}

/* What does this pseudo-class mean? */
/* 
Typically an element that has received focus and is triggered when a user clicks, taps or selects with a keyboard 'tab' key.  
*/
 
.text-input:focus {
  border-right-width: 5px;
}

/* What does this pseudo-class mean? */
/* 
The placeholder-shown CSS property sets rules regarding the placeholder attribute for form input and text area elements. 
*/

.text-input:placeholder-shown {
  border-style: dashed;
}

.flex-row {
  display: flex;
  align-items: center;
}

.flex-row select {
  flex: 1 0 0;
  margin-left: 2%;
}

.flex-row input {
  margin-right: 2%;
}

/* What does this selector do? */
/* 
The checked pseudo class sets CSS property rules depending if the checkbox element is selected or not.  

The next-sibling combinator separates two selectors and matches the second element only if it follows the first element.

Explanation : The combinator in this case allows the checkbox state to effect the styling of the label element below.
*/
.checkbox:checked + label {
  color: #999999;
  font-style: italic;
}

/* What does this selector do? */
/* 
This selector adds additional text the form when the checkbox has been selected.  
*/

.checkbox:checked + label::after {
  margin-left: 10px;
  font-size: 90%;
  content: "(thanks!)";
}

footer {
  display: flex;
  justify-content: center;
  padding: 2%;
  background-color: #13293d;
  color: #fff;
}

@media screen and (max-width: 768px) {
  header {
    flex-direction: column;
  }
}
